fcf.module({name:"fcfDBControls:templates/table.hooks.js",dependencies:[],module:function(){return{hooksProgramableArgument:{value:function(a_taskInfo){let mode=a_taskInfo.args.mode,shortMode=fcf.cutMode(a_taskInfo.args.mode,2),dbfileds=[],projection=fcf.getProjection(a_taskInfo.args.projection);"read.min"==shortMode?(dbfileds.push({function:"key",as:"@key"}),dbfileds.push({function:"title",as:"@title"}),dbfileds.push({function:"description",as:"@description"})):((dbfileds=fcf.array(projection.fields,(a_k,a_filed)=>{let view=fcf.buildModeObject(mode,a_filed);return view.hidden?void 0:{field:view.alias,as:view.alias}})).push({function:"key",as:"@key"}),dbfileds.push({function:"title",as:"@title"}));let where=[];if(!fcf.empty(a_taskInfo.search)){let searchWhere=[],likeString="%"+a_taskInfo.search+"%";fcf.each(dbfileds,(k,field)=>{(field.function||fcf.getFilter(field).availableComparison("like"))&&searchWhere.push({logic:"or",type:"like",args:[{field:field.alias},{value:likeString}]})}),where.push({logic:"and",type:"block",args:searchWhere})}return fcf.application.getStorage().query({query:{type:"select",from:a_taskInfo.args.projection,fields:dbfileds,where:where},context:fcf.getContext()}).then(function(a_data){return a_data[0]})},columns:function(a_taskInfo){let columns=[],shortMode=fcf.cutMode(a_taskInfo.args.mode,2);return"read.min"==shortMode?(columns.push({alias:"@key",type:"int",title:fcf.t("Id")}),columns.push({alias:"@title",type:"text",title:fcf.t("Title")}),columns.push({alias:"@description",type:"text",title:fcf.t("Description")})):(columns=fcf.clone(fcf.getProjection(a_taskInfo.args.projection).fields),"read.short"==shortMode&&fcf.each(columns,(k,c)=>{c.cutHTML=!0,c.cutSize=1024})),columns}},hooksBeforeArgument:{value:function(a_taskInfo){return fcf.loadFilters(a_taskInfo.args.columns)}}}}});