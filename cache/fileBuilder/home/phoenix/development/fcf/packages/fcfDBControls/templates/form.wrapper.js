fcf.module({name:"fcfDBControls:templates/form.wrapper.js",dependencies:["fcfControls:templates/form.wrapper.js"],module:function(Form){return class extends Form{constructor(a_initializeOptions){super(a_initializeOptions)}onAttach(){return fcf.loadFilters(this.getArg("views"))}validate(a_showError){let result=[],allErrors=(this.getChilds(),this.getArg("mode"),this.getArg("allErrors")),values=this.getArg("_values"),views=this.getArg("views"),newAllErrors={},defaultLanguage=fcf.getSystemVariable("fcf:defaultLanguage");return fcf.each(allErrors,(a_lang,a_items)=>{newAllErrors[a_lang]={},fcf.each(a_items,a_alias=>{newAllErrors[a_lang][a_alias]=[];let value=values[a_lang]?values[a_lang][a_alias]:void 0,errors=[],resErrors=[],view=views[fcf.find(views,(k,v)=>v.alias==a_alias)];defaultLanguage!=a_lang&&(delete(view=fcf.clone(view)).notNull,delete view.notEmpty),fcf.getFilter(view).validate({field:view,data:value},errors),fcf.each(errors,function(a_key,a_error){resErrors.push({alias:a_alias,error:a_error})}),fcf.append(result,resErrors),newAllErrors[a_lang][a_alias]=resErrors})}),a_showError&&(this.setArg("allErrors",newAllErrors),this.update()),result}write(a_showErrors){let self=this,value=this.getArg("value"),key=value&&!fcf.empty(value["@key"])?value["@key"]:void 0,modify=this.getArg("_modify"),mode=self.getArg("mode").split(".")[0],projection=self.getArg("projection");return this.getArg("mode").split(".")[0],fcf.actions().exec(a_act=>{var errors=this.validate(a_showErrors);fcf.empty(errors)?a_act.complete():a_act.error(new fcf.Exception("ERROR_FORM_INPUT",{errors:errors}))}).then(()=>self.send({type:mode,data:modify,key:key,projection:projection}))}onArg_values(a_value,a_suffix){let pathArr=fcf.parseObjectAddress(a_suffix);if(pathArr.length<2)return;let alias=pathArr[1],newPath='["'+pathArr[0]+'"]["'+alias+'"]',modifyItem=fcf.resolve(a_value,newPath),modify=this.getArg("_modify"),values=this.getArg("_values"),views=this.getArg("views");modify[pathArr[0]]||(modify[pathArr[0]]={}),fcf.each(values,(a_lang,a_values)=>{a_values||(values[a_lang]={})}),views[fcf.find(views,(k,v)=>v.alias==alias)].translate?(modify[pathArr[0]][alias]=modifyItem,this.setArg("_modify",modify)):(fcf.first(modify)[alias]=modifyItem,this.setArg("_modify",modify),fcf.each(values,(a_lang,a_values)=>{a_values[alias]=modifyItem}),this.setArg("_values",values,!1))}onArgLanguage(a_value,a_suffix){this.update()}}}});