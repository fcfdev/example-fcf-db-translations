fcf.module({name:"fcfManagement:templates/pages/translate+translations.wrapper.js",dependencies:["fcf:NRender/Wrapper.js"],module:function(Wrapper){return class extends Wrapper{constructor(a_initializeOptions){super(a_initializeOptions)}onArg(a_argName,a_value){this.getChild("save").setArg("enable",!0)}onArgCurrentTranslate(a_value,a_suffix){}onArgShortTranslations(a_value,a_suffix){var addr=fcf.parseObjectAddress(a_suffix);if(addr.pop(),0!=addr.length){var lang=addr[0],item=fcf.resolve(a_value,addr),modify=this.getArg("modify");modify[lang]||(modify[lang]={}),modify[lang][item.phrase]=item.translate,this.setArg("modify",modify);var remove=this.getArg("remove");for(var lang in remove)item.phrase in remove[lang]&&delete remove[lang][item.phrase];this.setArg("remove",remove)}}onArgLang(a_value){this.update()}onArgDisplaySystem(a_value){this.update()}onArgDisplayApplication(a_value){this.update()}onArgDisplayOnlyBlank(a_value){this.update()}onNewRecord(){fcf.application.render({template:"fcfManagement:templates/blocks/dialog.tmpl",args:{title:fcf.t("Adding a new record"),content:fcf.arg("template",{template:"@controls:form",args:{fcfAlias:"form",views:[{alias:"phrase",title:"!{Phrase}!",type:"string",notEmpty:!0}]}}),buttons:["create","cancel"],fcfEventClose:"fcf.getWrapper('"+this.getId()+"').onNewRecordComplete(event, wrapper)"}})}onNewRecordComplete(a_event,a_wrapper){if("create"==a_event.button){var errors=a_wrapper.getChild("form").validate(!0);if(fcf.empty(errors)){var value=a_wrapper.getChild("form").getArg("value"),shortTranslations=this.getArg("shortTranslations"),modify=this.getArg("modify");for(var lang in shortTranslations)modify[lang]||(modify[lang]={}),modify[lang][value.phrase]=value.phrase;this.setArg("modify",modify);var remove=this.getArg("remove");for(var lang in remove)value.phrase in remove[lang]&&delete remove[lang][value.phrase];this.setArg("remove",remove);var record={phrase:value.phrase,locations:"",system:!1,application:!0,translate:value.phrase,editable:!0},isFill=!1;for(var lang in shortTranslations){var phrases=shortTranslations[lang];void 0===fcf.find(phrases,function(k,v){return v.phrase==value.phrase})&&(isFill=!0,phrases.unshift(record))}if(!isFill)return alert(fcf.t("Entered phrase already exists!")),void a_event.preventDefault();this.setArg("shortTranslations",shortTranslations),this.update()}else a_event.preventDefault()}}onDeletePhrase(a_phrase){var remove=this.getArg("remove"),lang=this.getArg("lang");remove[lang]||(remove[lang]={}),remove[lang][a_phrase]=!0,this.setArg("remove",remove);var modify=this.getArg("modify");modify[lang]&&modify[lang][a_phrase]&&(delete modify[lang][a_phrase],this.setArg("modify",modify)),this.update()}onCancel(a_event){this.refresh()}onSave(a_event){let self=this,modify=this.getArg("modify"),langs=this.getArg("langs");for(let lang in langs)modify[lang]||(modify[lang]=!0);this.send({command:"update",translate:modify,remove:this.getArg("remove")}).then(function(a_data){self.getChild("save").setArg("enable",!1),self.update()}).catch(function(a_error){fcf.application.render({template:"@controls:error-dialog",args:{error:a_error}})})}onSearchWords(a_event){let self=this;this.send({command:"search"}).then(function(a_data){self.update()}).catch(function(a_error){fcf.application.render({template:"@controls:error-dialog",args:{error:a_error}})})}}}});